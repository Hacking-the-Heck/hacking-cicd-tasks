name: Task 3 CI/CD Workflow

on:
  push:
    branches: [ main ]   # <-- Branch to trigger workflow
  pull_request:
    branches: [ main ]   # <-- Branch to trigger workflow for PRs

jobs:
  test:
    name: Run Tests on Multiple OS
    runs-on: ${{ matrix.os }}  # <-- Fill: matrix.os (OS options)
    strategy:
      matrix:
        os: [ ubuntu-latest , macos-latest , windows-latest ]   # <-- OS options: ubuntu-latest, macos-latest, windows-latest
        python-version: [ 3.11, 3.12 ]       # <-- Python version to test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/

  build:
    name: Build Release Package
    runs-on: ubuntu-latest   # <-- Choose OS to build on (e.g., ubuntu-latest)
    needs: test   # <-- Ensure package build runs after tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11   # <-- Python version for build

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install build tools
        run: |
          python -m pip install --upgrade setuptools wheel

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: task3-package
          path: dist/*
          
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Tag
        id: tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          git tag $TAG
          git push origin $TAG
          echo "TAG=$TAG" >> $GITHUB_ENV

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
